IdpServiceFacade.KeysWrapper
IdpServiceFacade.KeysWrapper.CalculateSize() -> int
IdpServiceFacade.KeysWrapper.KeysWrapper() -> void
IdpServiceFacade.OrgRequest
IdpServiceFacade.OrgRequest.CalculateSize() -> int
IdpServiceFacade.OrgRequest.OrgRequest() -> void
IdpServiceFacade.OrgUserRequest
IdpServiceFacade.OrgUserRequest.CalculateSize() -> int
IdpServiceFacade.OrgUserRequest.OrgUserRequest() -> void
IdpServiceFacade.Organization
IdpServiceFacade.Organization.OrganizationClient
IdpServiceFacade.Organization.OrganizationClient.OrganizationClient() -> void
IdpServiceFacade.OrganizationReflection
IdpServiceFacade.OrganizationReply
IdpServiceFacade.OrganizationReply.CalculateSize() -> int
IdpServiceFacade.OrganizationReply.Ok.get -> bool
IdpServiceFacade.OrganizationReply.Ok.set -> void
IdpServiceFacade.OrganizationReply.OrganizationReply() -> void
IdpServiceFacade.User
IdpServiceFacade.User.UserClient
IdpServiceFacade.User.UserClient.UserClient() -> void
IdpServiceFacade.UserChangePasswordRequest
IdpServiceFacade.UserChangePasswordRequest.CalculateSize() -> int
IdpServiceFacade.UserChangePasswordRequest.UserChangePasswordRequest() -> void
IdpServiceFacade.UserMFARequest
IdpServiceFacade.UserMFARequest.CalculateSize() -> int
IdpServiceFacade.UserMFARequest.Enable.get -> bool
IdpServiceFacade.UserMFARequest.Enable.set -> void
IdpServiceFacade.UserMFARequest.UserMFARequest() -> void
IdpServiceFacade.UserMetadataReply
IdpServiceFacade.UserMetadataReply.CalculateSize() -> int
IdpServiceFacade.UserMetadataReply.UserMetadataReply() -> void
IdpServiceFacade.UserMetadataRequest
IdpServiceFacade.UserMetadataRequest.CalculateSize() -> int
IdpServiceFacade.UserMetadataRequest.UserMetadataRequest() -> void
IdpServiceFacade.UserReflection
IdpServiceFacade.UserReply
IdpServiceFacade.UserReply.CalculateSize() -> int
IdpServiceFacade.UserReply.Ok.get -> bool
IdpServiceFacade.UserReply.Ok.set -> void
IdpServiceFacade.UserReply.UserReply() -> void
IdpServiceFacade.UserRequest
IdpServiceFacade.UserRequest.CalculateSize() -> int
IdpServiceFacade.UserRequest.UserRequest() -> void
IdpServiceFacade.UserRoleRequest
IdpServiceFacade.UserRoleRequest.CalculateSize() -> int
IdpServiceFacade.UserRoleRequest.UserRoleRequest() -> void
const IdpServiceFacade.KeysWrapper.KeyFieldNumber = 1 -> int
const IdpServiceFacade.OrgRequest.OrgEmailFieldNumber = 1 -> int
const IdpServiceFacade.OrgUserRequest.OrgEmailFieldNumber = 1 -> int
const IdpServiceFacade.OrgUserRequest.UserEmailFieldNumber = 2 -> int
const IdpServiceFacade.OrganizationReply.ErrorFieldNumber = 2 -> int
const IdpServiceFacade.OrganizationReply.OkFieldNumber = 1 -> int
const IdpServiceFacade.UserChangePasswordRequest.EmailFieldNumber = 1 -> int
const IdpServiceFacade.UserChangePasswordRequest.PasswordFieldNumber = 2 -> int
const IdpServiceFacade.UserMFARequest.EmailFieldNumber = 1 -> int
const IdpServiceFacade.UserMFARequest.EnableFieldNumber = 2 -> int
const IdpServiceFacade.UserMetadataReply.MetadataFieldNumber = 1 -> int
const IdpServiceFacade.UserMetadataRequest.EmailFieldNumber = 1 -> int
const IdpServiceFacade.UserMetadataRequest.KeysFieldNumber = 2 -> int
const IdpServiceFacade.UserReply.ErrorFieldNumber = 2 -> int
const IdpServiceFacade.UserReply.OkFieldNumber = 1 -> int
const IdpServiceFacade.UserRequest.EmailFieldNumber = 1 -> int
const IdpServiceFacade.UserRoleRequest.EmailFieldNumber = 1 -> int
const IdpServiceFacade.UserRoleRequest.RoleFieldNumber = 2 -> int
override IdpServiceFacade.KeysWrapper.GetHashCode() -> int
override IdpServiceFacade.OrgRequest.GetHashCode() -> int
override IdpServiceFacade.OrgUserRequest.GetHashCode() -> int
override IdpServiceFacade.OrganizationReply.GetHashCode() -> int
override IdpServiceFacade.UserChangePasswordRequest.GetHashCode() -> int
override IdpServiceFacade.UserMFARequest.GetHashCode() -> int
override IdpServiceFacade.UserMetadataReply.GetHashCode() -> int
override IdpServiceFacade.UserMetadataRequest.GetHashCode() -> int
override IdpServiceFacade.UserReply.GetHashCode() -> int
override IdpServiceFacade.UserRequest.GetHashCode() -> int
override IdpServiceFacade.UserRoleRequest.GetHashCode() -> int
~IdpServiceFacade.KeysWrapper.Clone() -> IdpServiceFacade.KeysWrapper
~IdpServiceFacade.KeysWrapper.Equals(IdpServiceFacade.KeysWrapper other) -> bool
~IdpServiceFacade.KeysWrapper.Key.get -> Google.Protobuf.Collections.RepeatedField<string>
~IdpServiceFacade.KeysWrapper.KeysWrapper(IdpServiceFacade.KeysWrapper other) -> void
~IdpServiceFacade.KeysWrapper.MergeFrom(Google.Protobuf.CodedInputStream input) -> void
~IdpServiceFacade.KeysWrapper.MergeFrom(IdpServiceFacade.KeysWrapper other) -> void
~IdpServiceFacade.KeysWrapper.WriteTo(Google.Protobuf.CodedOutputStream output) -> void
~IdpServiceFacade.OrgRequest.Clone() -> IdpServiceFacade.OrgRequest
~IdpServiceFacade.OrgRequest.Equals(IdpServiceFacade.OrgRequest other) -> bool
~IdpServiceFacade.OrgRequest.MergeFrom(Google.Protobuf.CodedInputStream input) -> void
~IdpServiceFacade.OrgRequest.MergeFrom(IdpServiceFacade.OrgRequest other) -> void
~IdpServiceFacade.OrgRequest.OrgEmail.get -> string
~IdpServiceFacade.OrgRequest.OrgEmail.set -> void
~IdpServiceFacade.OrgRequest.OrgRequest(IdpServiceFacade.OrgRequest other) -> void
~IdpServiceFacade.OrgRequest.WriteTo(Google.Protobuf.CodedOutputStream output) -> void
~IdpServiceFacade.OrgUserRequest.Clone() -> IdpServiceFacade.OrgUserRequest
~IdpServiceFacade.OrgUserRequest.Equals(IdpServiceFacade.OrgUserRequest other) -> bool
~IdpServiceFacade.OrgUserRequest.MergeFrom(Google.Protobuf.CodedInputStream input) -> void
~IdpServiceFacade.OrgUserRequest.MergeFrom(IdpServiceFacade.OrgUserRequest other) -> void
~IdpServiceFacade.OrgUserRequest.OrgEmail.get -> string
~IdpServiceFacade.OrgUserRequest.OrgEmail.set -> void
~IdpServiceFacade.OrgUserRequest.OrgUserRequest(IdpServiceFacade.OrgUserRequest other) -> void
~IdpServiceFacade.OrgUserRequest.UserEmail.get -> string
~IdpServiceFacade.OrgUserRequest.UserEmail.set -> void
~IdpServiceFacade.OrgUserRequest.WriteTo(Google.Protobuf.CodedOutputStream output) -> void
~IdpServiceFacade.Organization.OrganizationClient.OrganizationClient(Grpc.Core.CallInvoker callInvoker) -> void
~IdpServiceFacade.Organization.OrganizationClient.OrganizationClient(Grpc.Core.ChannelBase channel) -> void
~IdpServiceFacade.Organization.OrganizationClient.OrganizationClient(Grpc.Core.ClientBase.ClientBaseConfiguration configuration) -> void
~IdpServiceFacade.OrganizationReply.Clone() -> IdpServiceFacade.OrganizationReply
~IdpServiceFacade.OrganizationReply.Equals(IdpServiceFacade.OrganizationReply other) -> bool
~IdpServiceFacade.OrganizationReply.Error.get -> string
~IdpServiceFacade.OrganizationReply.Error.set -> void
~IdpServiceFacade.OrganizationReply.MergeFrom(Google.Protobuf.CodedInputStream input) -> void
~IdpServiceFacade.OrganizationReply.MergeFrom(IdpServiceFacade.OrganizationReply other) -> void
~IdpServiceFacade.OrganizationReply.OrganizationReply(IdpServiceFacade.OrganizationReply other) -> void
~IdpServiceFacade.OrganizationReply.WriteTo(Google.Protobuf.CodedOutputStream output) -> void
~IdpServiceFacade.User.UserClient.UserClient(Grpc.Core.CallInvoker callInvoker) -> void
~IdpServiceFacade.User.UserClient.UserClient(Grpc.Core.ChannelBase channel) -> void
~IdpServiceFacade.User.UserClient.UserClient(Grpc.Core.ClientBase.ClientBaseConfiguration configuration) -> void
~IdpServiceFacade.UserChangePasswordRequest.Clone() -> IdpServiceFacade.UserChangePasswordRequest
~IdpServiceFacade.UserChangePasswordRequest.Email.get -> string
~IdpServiceFacade.UserChangePasswordRequest.Email.set -> void
~IdpServiceFacade.UserChangePasswordRequest.Equals(IdpServiceFacade.UserChangePasswordRequest other) -> bool
~IdpServiceFacade.UserChangePasswordRequest.MergeFrom(Google.Protobuf.CodedInputStream input) -> void
~IdpServiceFacade.UserChangePasswordRequest.MergeFrom(IdpServiceFacade.UserChangePasswordRequest other) -> void
~IdpServiceFacade.UserChangePasswordRequest.Password.get -> string
~IdpServiceFacade.UserChangePasswordRequest.Password.set -> void
~IdpServiceFacade.UserChangePasswordRequest.UserChangePasswordRequest(IdpServiceFacade.UserChangePasswordRequest other) -> void
~IdpServiceFacade.UserChangePasswordRequest.WriteTo(Google.Protobuf.CodedOutputStream output) -> void
~IdpServiceFacade.UserMFARequest.Clone() -> IdpServiceFacade.UserMFARequest
~IdpServiceFacade.UserMFARequest.Email.get -> string
~IdpServiceFacade.UserMFARequest.Email.set -> void
~IdpServiceFacade.UserMFARequest.Equals(IdpServiceFacade.UserMFARequest other) -> bool
~IdpServiceFacade.UserMFARequest.MergeFrom(Google.Protobuf.CodedInputStream input) -> void
~IdpServiceFacade.UserMFARequest.MergeFrom(IdpServiceFacade.UserMFARequest other) -> void
~IdpServiceFacade.UserMFARequest.UserMFARequest(IdpServiceFacade.UserMFARequest other) -> void
~IdpServiceFacade.UserMFARequest.WriteTo(Google.Protobuf.CodedOutputStream output) -> void
~IdpServiceFacade.UserMetadataReply.Clone() -> IdpServiceFacade.UserMetadataReply
~IdpServiceFacade.UserMetadataReply.Equals(IdpServiceFacade.UserMetadataReply other) -> bool
~IdpServiceFacade.UserMetadataReply.MergeFrom(Google.Protobuf.CodedInputStream input) -> void
~IdpServiceFacade.UserMetadataReply.MergeFrom(IdpServiceFacade.UserMetadataReply other) -> void
~IdpServiceFacade.UserMetadataReply.Metadata.get -> Google.Protobuf.Collections.MapField<string, string>
~IdpServiceFacade.UserMetadataReply.UserMetadataReply(IdpServiceFacade.UserMetadataReply other) -> void
~IdpServiceFacade.UserMetadataReply.WriteTo(Google.Protobuf.CodedOutputStream output) -> void
~IdpServiceFacade.UserMetadataRequest.Clone() -> IdpServiceFacade.UserMetadataRequest
~IdpServiceFacade.UserMetadataRequest.Email.get -> string
~IdpServiceFacade.UserMetadataRequest.Email.set -> void
~IdpServiceFacade.UserMetadataRequest.Equals(IdpServiceFacade.UserMetadataRequest other) -> bool
~IdpServiceFacade.UserMetadataRequest.Keys.get -> IdpServiceFacade.KeysWrapper
~IdpServiceFacade.UserMetadataRequest.Keys.set -> void
~IdpServiceFacade.UserMetadataRequest.MergeFrom(Google.Protobuf.CodedInputStream input) -> void
~IdpServiceFacade.UserMetadataRequest.MergeFrom(IdpServiceFacade.UserMetadataRequest other) -> void
~IdpServiceFacade.UserMetadataRequest.UserMetadataRequest(IdpServiceFacade.UserMetadataRequest other) -> void
~IdpServiceFacade.UserMetadataRequest.WriteTo(Google.Protobuf.CodedOutputStream output) -> void
~IdpServiceFacade.UserReply.Clone() -> IdpServiceFacade.UserReply
~IdpServiceFacade.UserReply.Equals(IdpServiceFacade.UserReply other) -> bool
~IdpServiceFacade.UserReply.Error.get -> string
~IdpServiceFacade.UserReply.Error.set -> void
~IdpServiceFacade.UserReply.MergeFrom(Google.Protobuf.CodedInputStream input) -> void
~IdpServiceFacade.UserReply.MergeFrom(IdpServiceFacade.UserReply other) -> void
~IdpServiceFacade.UserReply.UserReply(IdpServiceFacade.UserReply other) -> void
~IdpServiceFacade.UserReply.WriteTo(Google.Protobuf.CodedOutputStream output) -> void
~IdpServiceFacade.UserRequest.Clone() -> IdpServiceFacade.UserRequest
~IdpServiceFacade.UserRequest.Email.get -> string
~IdpServiceFacade.UserRequest.Email.set -> void
~IdpServiceFacade.UserRequest.Equals(IdpServiceFacade.UserRequest other) -> bool
~IdpServiceFacade.UserRequest.MergeFrom(Google.Protobuf.CodedInputStream input) -> void
~IdpServiceFacade.UserRequest.MergeFrom(IdpServiceFacade.UserRequest other) -> void
~IdpServiceFacade.UserRequest.UserRequest(IdpServiceFacade.UserRequest other) -> void
~IdpServiceFacade.UserRequest.WriteTo(Google.Protobuf.CodedOutputStream output) -> void
~IdpServiceFacade.UserRoleRequest.Clone() -> IdpServiceFacade.UserRoleRequest
~IdpServiceFacade.UserRoleRequest.Email.get -> string
~IdpServiceFacade.UserRoleRequest.Email.set -> void
~IdpServiceFacade.UserRoleRequest.Equals(IdpServiceFacade.UserRoleRequest other) -> bool
~IdpServiceFacade.UserRoleRequest.MergeFrom(Google.Protobuf.CodedInputStream input) -> void
~IdpServiceFacade.UserRoleRequest.MergeFrom(IdpServiceFacade.UserRoleRequest other) -> void
~IdpServiceFacade.UserRoleRequest.Role.get -> string
~IdpServiceFacade.UserRoleRequest.Role.set -> void
~IdpServiceFacade.UserRoleRequest.UserRoleRequest(IdpServiceFacade.UserRoleRequest other) -> void
~IdpServiceFacade.UserRoleRequest.WriteTo(Google.Protobuf.CodedOutputStream output) -> void
~override IdpServiceFacade.KeysWrapper.Equals(object other) -> bool
~override IdpServiceFacade.KeysWrapper.ToString() -> string
~override IdpServiceFacade.OrgRequest.Equals(object other) -> bool
~override IdpServiceFacade.OrgRequest.ToString() -> string
~override IdpServiceFacade.OrgUserRequest.Equals(object other) -> bool
~override IdpServiceFacade.OrgUserRequest.ToString() -> string
~override IdpServiceFacade.Organization.OrganizationClient.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration configuration) -> IdpServiceFacade.Organization.OrganizationClient
~override IdpServiceFacade.OrganizationReply.Equals(object other) -> bool
~override IdpServiceFacade.OrganizationReply.ToString() -> string
~override IdpServiceFacade.User.UserClient.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration configuration) -> IdpServiceFacade.User.UserClient
~override IdpServiceFacade.UserChangePasswordRequest.Equals(object other) -> bool
~override IdpServiceFacade.UserChangePasswordRequest.ToString() -> string
~override IdpServiceFacade.UserMFARequest.Equals(object other) -> bool
~override IdpServiceFacade.UserMFARequest.ToString() -> string
~override IdpServiceFacade.UserMetadataReply.Equals(object other) -> bool
~override IdpServiceFacade.UserMetadataReply.ToString() -> string
~override IdpServiceFacade.UserMetadataRequest.Equals(object other) -> bool
~override IdpServiceFacade.UserMetadataRequest.ToString() -> string
~override IdpServiceFacade.UserReply.Equals(object other) -> bool
~override IdpServiceFacade.UserReply.ToString() -> string
~override IdpServiceFacade.UserRequest.Equals(object other) -> bool
~override IdpServiceFacade.UserRequest.ToString() -> string
~override IdpServiceFacade.UserRoleRequest.Equals(object other) -> bool
~override IdpServiceFacade.UserRoleRequest.ToString() -> string
~static IdpServiceFacade.KeysWrapper.Descriptor.get -> Google.Protobuf.Reflection.MessageDescriptor
~static IdpServiceFacade.KeysWrapper.Parser.get -> Google.Protobuf.MessageParser<IdpServiceFacade.KeysWrapper>
~static IdpServiceFacade.OrgRequest.Descriptor.get -> Google.Protobuf.Reflection.MessageDescriptor
~static IdpServiceFacade.OrgRequest.Parser.get -> Google.Protobuf.MessageParser<IdpServiceFacade.OrgRequest>
~static IdpServiceFacade.OrgUserRequest.Descriptor.get -> Google.Protobuf.Reflection.MessageDescriptor
~static IdpServiceFacade.OrgUserRequest.Parser.get -> Google.Protobuf.MessageParser<IdpServiceFacade.OrgUserRequest>
~static IdpServiceFacade.Organization.Descriptor.get -> Google.Protobuf.Reflection.ServiceDescriptor
~static IdpServiceFacade.OrganizationReflection.Descriptor.get -> Google.Protobuf.Reflection.FileDescriptor
~static IdpServiceFacade.OrganizationReply.Descriptor.get -> Google.Protobuf.Reflection.MessageDescriptor
~static IdpServiceFacade.OrganizationReply.Parser.get -> Google.Protobuf.MessageParser<IdpServiceFacade.OrganizationReply>
~static IdpServiceFacade.User.Descriptor.get -> Google.Protobuf.Reflection.ServiceDescriptor
~static IdpServiceFacade.UserChangePasswordRequest.Descriptor.get -> Google.Protobuf.Reflection.MessageDescriptor
~static IdpServiceFacade.UserChangePasswordRequest.Parser.get -> Google.Protobuf.MessageParser<IdpServiceFacade.UserChangePasswordRequest>
~static IdpServiceFacade.UserMFARequest.Descriptor.get -> Google.Protobuf.Reflection.MessageDescriptor
~static IdpServiceFacade.UserMFARequest.Parser.get -> Google.Protobuf.MessageParser<IdpServiceFacade.UserMFARequest>
~static IdpServiceFacade.UserMetadataReply.Descriptor.get -> Google.Protobuf.Reflection.MessageDescriptor
~static IdpServiceFacade.UserMetadataReply.Parser.get -> Google.Protobuf.MessageParser<IdpServiceFacade.UserMetadataReply>
~static IdpServiceFacade.UserMetadataRequest.Descriptor.get -> Google.Protobuf.Reflection.MessageDescriptor
~static IdpServiceFacade.UserMetadataRequest.Parser.get -> Google.Protobuf.MessageParser<IdpServiceFacade.UserMetadataRequest>
~static IdpServiceFacade.UserReflection.Descriptor.get -> Google.Protobuf.Reflection.FileDescriptor
~static IdpServiceFacade.UserReply.Descriptor.get -> Google.Protobuf.Reflection.MessageDescriptor
~static IdpServiceFacade.UserReply.Parser.get -> Google.Protobuf.MessageParser<IdpServiceFacade.UserReply>
~static IdpServiceFacade.UserRequest.Descriptor.get -> Google.Protobuf.Reflection.MessageDescriptor
~static IdpServiceFacade.UserRequest.Parser.get -> Google.Protobuf.MessageParser<IdpServiceFacade.UserRequest>
~static IdpServiceFacade.UserRoleRequest.Descriptor.get -> Google.Protobuf.Reflection.MessageDescriptor
~static IdpServiceFacade.UserRoleRequest.Parser.get -> Google.Protobuf.MessageParser<IdpServiceFacade.UserRoleRequest>
~virtual IdpServiceFacade.Organization.OrganizationClient.InitiateLegalHold(IdpServiceFacade.OrgRequest request, Grpc.Core.CallOptions options) -> IdpServiceFacade.OrganizationReply
~virtual IdpServiceFacade.Organization.OrganizationClient.InitiateLegalHold(IdpServiceFacade.OrgRequest request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> IdpServiceFacade.OrganizationReply
~virtual IdpServiceFacade.Organization.OrganizationClient.InitiateLegalHoldAsync(IdpServiceFacade.OrgRequest request, Grpc.Core.CallOptions options) -> Grpc.Core.AsyncUnaryCall<IdpServiceFacade.OrganizationReply>
~virtual IdpServiceFacade.Organization.OrganizationClient.InitiateLegalHoldAsync(IdpServiceFacade.OrgRequest request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> Grpc.Core.AsyncUnaryCall<IdpServiceFacade.OrganizationReply>
~virtual IdpServiceFacade.Organization.OrganizationClient.InitiateLockout(IdpServiceFacade.OrgRequest request, Grpc.Core.CallOptions options) -> IdpServiceFacade.OrganizationReply
~virtual IdpServiceFacade.Organization.OrganizationClient.InitiateLockout(IdpServiceFacade.OrgRequest request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> IdpServiceFacade.OrganizationReply
~virtual IdpServiceFacade.Organization.OrganizationClient.InitiateLockoutAsync(IdpServiceFacade.OrgRequest request, Grpc.Core.CallOptions options) -> Grpc.Core.AsyncUnaryCall<IdpServiceFacade.OrganizationReply>
~virtual IdpServiceFacade.Organization.OrganizationClient.InitiateLockoutAsync(IdpServiceFacade.OrgRequest request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> Grpc.Core.AsyncUnaryCall<IdpServiceFacade.OrganizationReply>
~virtual IdpServiceFacade.Organization.OrganizationClient.InviteUser(IdpServiceFacade.OrgUserRequest request, Grpc.Core.CallOptions options) -> IdpServiceFacade.OrganizationReply
~virtual IdpServiceFacade.Organization.OrganizationClient.InviteUser(IdpServiceFacade.OrgUserRequest request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> IdpServiceFacade.OrganizationReply
~virtual IdpServiceFacade.Organization.OrganizationClient.InviteUserAsync(IdpServiceFacade.OrgUserRequest request, Grpc.Core.CallOptions options) -> Grpc.Core.AsyncUnaryCall<IdpServiceFacade.OrganizationReply>
~virtual IdpServiceFacade.Organization.OrganizationClient.InviteUserAsync(IdpServiceFacade.OrgUserRequest request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> Grpc.Core.AsyncUnaryCall<IdpServiceFacade.OrganizationReply>
~virtual IdpServiceFacade.Organization.OrganizationClient.MarkAsFraud(IdpServiceFacade.OrgRequest request, Grpc.Core.CallOptions options) -> IdpServiceFacade.OrganizationReply
~virtual IdpServiceFacade.Organization.OrganizationClient.MarkAsFraud(IdpServiceFacade.OrgRequest request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> IdpServiceFacade.OrganizationReply
~virtual IdpServiceFacade.Organization.OrganizationClient.MarkAsFraudAsync(IdpServiceFacade.OrgRequest request, Grpc.Core.CallOptions options) -> Grpc.Core.AsyncUnaryCall<IdpServiceFacade.OrganizationReply>
~virtual IdpServiceFacade.Organization.OrganizationClient.MarkAsFraudAsync(IdpServiceFacade.OrgRequest request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> Grpc.Core.AsyncUnaryCall<IdpServiceFacade.OrganizationReply>
~virtual IdpServiceFacade.Organization.OrganizationClient.MarkAsSuspicious(IdpServiceFacade.OrgRequest request, Grpc.Core.CallOptions options) -> IdpServiceFacade.OrganizationReply
~virtual IdpServiceFacade.Organization.OrganizationClient.MarkAsSuspicious(IdpServiceFacade.OrgRequest request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> IdpServiceFacade.OrganizationReply
~virtual IdpServiceFacade.Organization.OrganizationClient.MarkAsSuspiciousAsync(IdpServiceFacade.OrgRequest request, Grpc.Core.CallOptions options) -> Grpc.Core.AsyncUnaryCall<IdpServiceFacade.OrganizationReply>
~virtual IdpServiceFacade.Organization.OrganizationClient.MarkAsSuspiciousAsync(IdpServiceFacade.OrgRequest request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> Grpc.Core.AsyncUnaryCall<IdpServiceFacade.OrganizationReply>
~virtual IdpServiceFacade.User.UserClient.AssignRole(IdpServiceFacade.UserRoleRequest request, Grpc.Core.CallOptions options) -> IdpServiceFacade.UserReply
~virtual IdpServiceFacade.User.UserClient.AssignRole(IdpServiceFacade.UserRoleRequest request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> IdpServiceFacade.UserReply
~virtual IdpServiceFacade.User.UserClient.AssignRoleAsync(IdpServiceFacade.UserRoleRequest request, Grpc.Core.CallOptions options) -> Grpc.Core.AsyncUnaryCall<IdpServiceFacade.UserReply>
~virtual IdpServiceFacade.User.UserClient.AssignRoleAsync(IdpServiceFacade.UserRoleRequest request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> Grpc.Core.AsyncUnaryCall<IdpServiceFacade.UserReply>
~virtual IdpServiceFacade.User.UserClient.BlockUser(IdpServiceFacade.UserRequest request, Grpc.Core.CallOptions options) -> IdpServiceFacade.UserReply
~virtual IdpServiceFacade.User.UserClient.BlockUser(IdpServiceFacade.UserRequest request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> IdpServiceFacade.UserReply
~virtual IdpServiceFacade.User.UserClient.BlockUserAsync(IdpServiceFacade.UserRequest request, Grpc.Core.CallOptions options) -> Grpc.Core.AsyncUnaryCall<IdpServiceFacade.UserReply>
~virtual IdpServiceFacade.User.UserClient.BlockUserAsync(IdpServiceFacade.UserRequest request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> Grpc.Core.AsyncUnaryCall<IdpServiceFacade.UserReply>
~virtual IdpServiceFacade.User.UserClient.ChangePassword(IdpServiceFacade.UserChangePasswordRequest request, Grpc.Core.CallOptions options) -> IdpServiceFacade.UserReply
~virtual IdpServiceFacade.User.UserClient.ChangePassword(IdpServiceFacade.UserChangePasswordRequest request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> IdpServiceFacade.UserReply
~virtual IdpServiceFacade.User.UserClient.ChangePasswordAsync(IdpServiceFacade.UserChangePasswordRequest request, Grpc.Core.CallOptions options) -> Grpc.Core.AsyncUnaryCall<IdpServiceFacade.UserReply>
~virtual IdpServiceFacade.User.UserClient.ChangePasswordAsync(IdpServiceFacade.UserChangePasswordRequest request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> Grpc.Core.AsyncUnaryCall<IdpServiceFacade.UserReply>
~virtual IdpServiceFacade.User.UserClient.GetUserMetadata(IdpServiceFacade.UserMetadataRequest request, Grpc.Core.CallOptions options) -> IdpServiceFacade.UserMetadataReply
~virtual IdpServiceFacade.User.UserClient.GetUserMetadata(IdpServiceFacade.UserMetadataRequest request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> IdpServiceFacade.UserMetadataReply
~virtual IdpServiceFacade.User.UserClient.GetUserMetadataAsync(IdpServiceFacade.UserMetadataRequest request, Grpc.Core.CallOptions options) -> Grpc.Core.AsyncUnaryCall<IdpServiceFacade.UserMetadataReply>
~virtual IdpServiceFacade.User.UserClient.GetUserMetadataAsync(IdpServiceFacade.UserMetadataRequest request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> Grpc.Core.AsyncUnaryCall<IdpServiceFacade.UserMetadataReply>
~virtual IdpServiceFacade.User.UserClient.InitiateForcedLogin(IdpServiceFacade.UserRequest request, Grpc.Core.CallOptions options) -> IdpServiceFacade.UserReply
~virtual IdpServiceFacade.User.UserClient.InitiateForcedLogin(IdpServiceFacade.UserRequest request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> IdpServiceFacade.UserReply
~virtual IdpServiceFacade.User.UserClient.InitiateForcedLoginAsync(IdpServiceFacade.UserRequest request, Grpc.Core.CallOptions options) -> Grpc.Core.AsyncUnaryCall<IdpServiceFacade.UserReply>
~virtual IdpServiceFacade.User.UserClient.InitiateForcedLoginAsync(IdpServiceFacade.UserRequest request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> Grpc.Core.AsyncUnaryCall<IdpServiceFacade.UserReply>
~virtual IdpServiceFacade.User.UserClient.InitiateLegalHold(IdpServiceFacade.UserRequest request, Grpc.Core.CallOptions options) -> IdpServiceFacade.UserReply
~virtual IdpServiceFacade.User.UserClient.InitiateLegalHold(IdpServiceFacade.UserRequest request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> IdpServiceFacade.UserReply
~virtual IdpServiceFacade.User.UserClient.InitiateLegalHoldAsync(IdpServiceFacade.UserRequest request, Grpc.Core.CallOptions options) -> Grpc.Core.AsyncUnaryCall<IdpServiceFacade.UserReply>
~virtual IdpServiceFacade.User.UserClient.InitiateLegalHoldAsync(IdpServiceFacade.UserRequest request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> Grpc.Core.AsyncUnaryCall<IdpServiceFacade.UserReply>
~virtual IdpServiceFacade.User.UserClient.InitiateLockout(IdpServiceFacade.UserRequest request, Grpc.Core.CallOptions options) -> IdpServiceFacade.UserReply
~virtual IdpServiceFacade.User.UserClient.InitiateLockout(IdpServiceFacade.UserRequest request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> IdpServiceFacade.UserReply
~virtual IdpServiceFacade.User.UserClient.InitiateLockoutAsync(IdpServiceFacade.UserRequest request, Grpc.Core.CallOptions options) -> Grpc.Core.AsyncUnaryCall<IdpServiceFacade.UserReply>
~virtual IdpServiceFacade.User.UserClient.InitiateLockoutAsync(IdpServiceFacade.UserRequest request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> Grpc.Core.AsyncUnaryCall<IdpServiceFacade.UserReply>
~virtual IdpServiceFacade.User.UserClient.MarkAsFraud(IdpServiceFacade.UserRequest request, Grpc.Core.CallOptions options) -> IdpServiceFacade.UserReply
~virtual IdpServiceFacade.User.UserClient.MarkAsFraud(IdpServiceFacade.UserRequest request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> IdpServiceFacade.UserReply
~virtual IdpServiceFacade.User.UserClient.MarkAsFraudAsync(IdpServiceFacade.UserRequest request, Grpc.Core.CallOptions options) -> Grpc.Core.AsyncUnaryCall<IdpServiceFacade.UserReply>
~virtual IdpServiceFacade.User.UserClient.MarkAsFraudAsync(IdpServiceFacade.UserRequest request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> Grpc.Core.AsyncUnaryCall<IdpServiceFacade.UserReply>
~virtual IdpServiceFacade.User.UserClient.MarkAsSuspicious(IdpServiceFacade.UserRequest request, Grpc.Core.CallOptions options) -> IdpServiceFacade.UserReply
~virtual IdpServiceFacade.User.UserClient.MarkAsSuspicious(IdpServiceFacade.UserRequest request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> IdpServiceFacade.UserReply
~virtual IdpServiceFacade.User.UserClient.MarkAsSuspiciousAsync(IdpServiceFacade.UserRequest request, Grpc.Core.CallOptions options) -> Grpc.Core.AsyncUnaryCall<IdpServiceFacade.UserReply>
~virtual IdpServiceFacade.User.UserClient.MarkAsSuspiciousAsync(IdpServiceFacade.UserRequest request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> Grpc.Core.AsyncUnaryCall<IdpServiceFacade.UserReply>
~virtual IdpServiceFacade.User.UserClient.RemoveRole(IdpServiceFacade.UserRoleRequest request, Grpc.Core.CallOptions options) -> IdpServiceFacade.UserReply
~virtual IdpServiceFacade.User.UserClient.RemoveRole(IdpServiceFacade.UserRoleRequest request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> IdpServiceFacade.UserReply
~virtual IdpServiceFacade.User.UserClient.RemoveRoleAsync(IdpServiceFacade.UserRoleRequest request, Grpc.Core.CallOptions options) -> Grpc.Core.AsyncUnaryCall<IdpServiceFacade.UserReply>
~virtual IdpServiceFacade.User.UserClient.RemoveRoleAsync(IdpServiceFacade.UserRoleRequest request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> Grpc.Core.AsyncUnaryCall<IdpServiceFacade.UserReply>
~virtual IdpServiceFacade.User.UserClient.ToggleMfa(IdpServiceFacade.UserMFARequest request, Grpc.Core.CallOptions options) -> IdpServiceFacade.UserReply
~virtual IdpServiceFacade.User.UserClient.ToggleMfa(IdpServiceFacade.UserMFARequest request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> IdpServiceFacade.UserReply
~virtual IdpServiceFacade.User.UserClient.ToggleMfaAsync(IdpServiceFacade.UserMFARequest request, Grpc.Core.CallOptions options) -> Grpc.Core.AsyncUnaryCall<IdpServiceFacade.UserReply>
~virtual IdpServiceFacade.User.UserClient.ToggleMfaAsync(IdpServiceFacade.UserMFARequest request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> Grpc.Core.AsyncUnaryCall<IdpServiceFacade.UserReply>
~virtual IdpServiceFacade.User.UserClient.UnblockUser(IdpServiceFacade.UserRequest request, Grpc.Core.CallOptions options) -> IdpServiceFacade.UserReply
~virtual IdpServiceFacade.User.UserClient.UnblockUser(IdpServiceFacade.UserRequest request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> IdpServiceFacade.UserReply
~virtual IdpServiceFacade.User.UserClient.UnblockUserAsync(IdpServiceFacade.UserRequest request, Grpc.Core.CallOptions options) -> Grpc.Core.AsyncUnaryCall<IdpServiceFacade.UserReply>
~virtual IdpServiceFacade.User.UserClient.UnblockUserAsync(IdpServiceFacade.UserRequest request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> Grpc.Core.AsyncUnaryCall<IdpServiceFacade.UserReply>
~IdpServiceFacade.UserResponse.Picture.set -> void
IdpServiceFacade.UserResponse.Blocked.set -> void
~IdpServiceFacade.UserResponse.LastIp.get -> string
~IdpServiceFacade.UserResponse.LastIp.set -> void
~IdpServiceFacade.UserResponse.LastLogin.get -> string
~IdpServiceFacade.UserResponse.LastLogin.set -> void
~IdpServiceFacade.UserResponse.UserId.get -> string
~IdpServiceFacade.UserResponse.MergeFrom(IdpServiceFacade.UserResponse other) -> void
~virtual IdpServiceFacade.User.UserClient.GetUser(IdpServiceFacade.UserId request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> IdpServiceFacade.UserResponse
~virtual IdpServiceFacade.User.UserClient.GetUser(IdpServiceFacade.UserId request, Grpc.Core.CallOptions options) -> IdpServiceFacade.UserResponse
~IdpServiceFacade.UserResponse.Identities.get -> Google.Protobuf.Collections.RepeatedField<IdpServiceFacade.Identity>
~virtual IdpServiceFacade.User.UserClient.GetUserAsync(IdpServiceFacade.UserId request, Grpc.Core.CallOptions options) -> Grpc.Core.AsyncUnaryCall<IdpServiceFacade.UserResponse>
~virtual IdpServiceFacade.User.UserClient.GetUserAsync(IdpServiceFacade.UserId request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> Grpc.Core.AsyncUnaryCall<IdpServiceFacade.UserResponse>
const IdpServiceFacade.UserId.IdFieldNumber = 1 -> int
IdpServiceFacade.UserId
IdpServiceFacade.Identity
const IdpServiceFacade.Identity.UserIdFieldNumber = 1 -> int
IdpServiceFacade.UserResponse
const IdpServiceFacade.UserResponse.EmailVerifiedFieldNumber = 2 -> int
const IdpServiceFacade.UserResponse.EmailFieldNumber = 1 -> int
const IdpServiceFacade.UserResponse.PhoneNumberFieldNumber = 3 -> int
const IdpServiceFacade.UserResponse.PhoneVerifiedFieldNumber = 4 -> int
const IdpServiceFacade.UserResponse.UserMetadataFieldNumber = 5 -> int
const IdpServiceFacade.UserResponse.UsernameFieldNumber = 6 -> int
const IdpServiceFacade.UserResponse.NicknameFieldNumber = 7 -> int
const IdpServiceFacade.UserResponse.GivenNameFieldNumber = 8 -> int
const IdpServiceFacade.UserResponse.NameFieldNumber = 9 -> int
const IdpServiceFacade.UserResponse.FamilyNameFieldNumber = 10 -> int
const IdpServiceFacade.UserResponse.PictureFieldNumber = 11 -> int
const IdpServiceFacade.UserResponse.BlockedFieldNumber = 12 -> int
const IdpServiceFacade.UserResponse.IdentitiesFieldNumber = 13 -> int
const IdpServiceFacade.UserResponse.LastIpFieldNumber = 14 -> int
const IdpServiceFacade.UserResponse.LastLoginFieldNumber = 15 -> int
const IdpServiceFacade.UserResponse.UserIdFieldNumber = 16 -> int
~static IdpServiceFacade.Identity.Parser.get -> Google.Protobuf.MessageParser<IdpServiceFacade.Identity>
~static IdpServiceFacade.Identity.Descriptor.get -> Google.Protobuf.Reflection.MessageDescriptor
IdpServiceFacade.Identity.Identity() -> void
~IdpServiceFacade.Identity.Identity(IdpServiceFacade.Identity other) -> void
~IdpServiceFacade.Identity.Clone() -> IdpServiceFacade.Identity
~IdpServiceFacade.Identity.UserId.get -> string
~IdpServiceFacade.Identity.UserId.set -> void
~override IdpServiceFacade.Identity.Equals(object other) -> bool
~static IdpServiceFacade.UserId.Parser.get -> Google.Protobuf.MessageParser<IdpServiceFacade.UserId>
~static IdpServiceFacade.UserId.Descriptor.get -> Google.Protobuf.Reflection.MessageDescriptor
~static IdpServiceFacade.UserResponse.Descriptor.get -> Google.Protobuf.Reflection.MessageDescriptor
IdpServiceFacade.UserId.UserId() -> void
~IdpServiceFacade.UserId.UserId(IdpServiceFacade.UserId other) -> void
~IdpServiceFacade.UserId.Clone() -> IdpServiceFacade.UserId
~static IdpServiceFacade.UserResponse.Parser.get -> Google.Protobuf.MessageParser<IdpServiceFacade.UserResponse>
~IdpServiceFacade.UserId.Id.get -> string
~IdpServiceFacade.UserId.Id.set -> void
~override IdpServiceFacade.UserId.Equals(object other) -> bool
IdpServiceFacade.UserResponse.UserResponse() -> void
~IdpServiceFacade.UserResponse.UserResponse(IdpServiceFacade.UserResponse other) -> void
~IdpServiceFacade.UserResponse.Clone() -> IdpServiceFacade.UserResponse
~IdpServiceFacade.UserResponse.Email.get -> string
override IdpServiceFacade.UserId.GetHashCode() -> int
~IdpServiceFacade.UserId.Equals(IdpServiceFacade.UserId other) -> bool
~override IdpServiceFacade.UserId.ToString() -> string
~IdpServiceFacade.UserId.WriteTo(Google.Protobuf.CodedOutputStream output) -> void
IdpServiceFacade.UserId.CalculateSize() -> int
~IdpServiceFacade.UserId.MergeFrom(IdpServiceFacade.UserId other) -> void
~IdpServiceFacade.UserId.MergeFrom(Google.Protobuf.CodedInputStream input) -> void
~IdpServiceFacade.UserResponse.Email.set -> void
IdpServiceFacade.UserResponse.EmailVerified.get -> bool
IdpServiceFacade.UserResponse.EmailVerified.set -> void
~IdpServiceFacade.UserResponse.PhoneNumber.get -> string
~IdpServiceFacade.UserResponse.PhoneNumber.set -> void
IdpServiceFacade.UserResponse.PhoneVerified.get -> bool
IdpServiceFacade.UserResponse.PhoneVerified.set -> void
~IdpServiceFacade.UserResponse.UserMetadata.get -> string
~IdpServiceFacade.UserResponse.UserMetadata.set -> void
~IdpServiceFacade.UserResponse.Username.get -> string
~IdpServiceFacade.UserResponse.Nickname.get -> string
~IdpServiceFacade.UserResponse.Username.set -> void
~IdpServiceFacade.UserResponse.Nickname.set -> void
IdpServiceFacade.UserResponse.HasNickname.get -> bool
IdpServiceFacade.UserResponse.ClearNickname() -> void
~IdpServiceFacade.UserResponse.GivenName.get -> string
IdpServiceFacade.UserResponse.HasGivenName.get -> bool
IdpServiceFacade.UserResponse.ClearGivenName() -> void
~IdpServiceFacade.UserResponse.Name.get -> string
~IdpServiceFacade.UserResponse.GivenName.set -> void
~IdpServiceFacade.UserResponse.Name.set -> void
~IdpServiceFacade.UserResponse.FamilyName.set -> void
~IdpServiceFacade.UserResponse.Picture.get -> string
~IdpServiceFacade.UserResponse.FamilyName.get -> string
IdpServiceFacade.UserResponse.Blocked.get -> bool
~IdpServiceFacade.UserResponse.UserId.set -> void
~override IdpServiceFacade.UserResponse.Equals(object other) -> bool
~IdpServiceFacade.Identity.Equals(IdpServiceFacade.Identity other) -> bool
override IdpServiceFacade.Identity.GetHashCode() -> int
~override IdpServiceFacade.Identity.ToString() -> string
~IdpServiceFacade.Identity.WriteTo(Google.Protobuf.CodedOutputStream output) -> void
IdpServiceFacade.Identity.CalculateSize() -> int
~IdpServiceFacade.UserResponse.Equals(IdpServiceFacade.UserResponse other) -> bool
~IdpServiceFacade.Identity.MergeFrom(IdpServiceFacade.Identity other) -> void
~IdpServiceFacade.Identity.MergeFrom(Google.Protobuf.CodedInputStream input) -> void
override IdpServiceFacade.UserResponse.GetHashCode() -> int
~IdpServiceFacade.UserResponse.WriteTo(Google.Protobuf.CodedOutputStream output) -> void
~override IdpServiceFacade.UserResponse.ToString() -> string
IdpServiceFacade.UserResponse.CalculateSize() -> int
~IdpServiceFacade.UserResponse.MergeFrom(Google.Protobuf.CodedInputStream input) -> void
static UserResponseHelpers.ToGetUserResponse(this Auth0.ManagementApi.Models.User! user) -> IdpServiceFacade.UserResponse!
static Innago.Security.IdpServiceFacade.Services.UserResponseHelpers.ToGetUserResponse(this Auth0.ManagementApi.Models.User! user) -> IdpServiceFacade.UserResponse!
Abstractions.IUserService.ResetPassword(string! email, System.Threading.CancellationToken cancellationToken) -> MorseCode.ITask.ITask<string!>!
IdpServiceFacade.InitiatePasswordResetReply
const IdpServiceFacade.InitiatePasswordResetReply.TokenFieldNumber = 1 -> int
~virtual IdpServiceFacade.User.UserClient.InitiatePasswordReset(IdpServiceFacade.UserRequest request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> IdpServiceFacade.InitiatePasswordResetReply
~virtual IdpServiceFacade.User.UserClient.InitiatePasswordReset(IdpServiceFacade.UserRequest request, Grpc.Core.CallOptions options) -> IdpServiceFacade.InitiatePasswordResetReply
~virtual IdpServiceFacade.User.UserClient.InitiatePasswordResetAsync(IdpServiceFacade.UserRequest request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> Grpc.Core.AsyncUnaryCall<IdpServiceFacade.InitiatePasswordResetReply>
~virtual IdpServiceFacade.User.UserClient.InitiatePasswordResetAsync(IdpServiceFacade.UserRequest request, Grpc.Core.CallOptions options) -> Grpc.Core.AsyncUnaryCall<IdpServiceFacade.InitiatePasswordResetReply>
~static IdpServiceFacade.InitiatePasswordResetReply.Parser.get -> Google.Protobuf.MessageParser<IdpServiceFacade.InitiatePasswordResetReply>
~static IdpServiceFacade.InitiatePasswordResetReply.Descriptor.get -> Google.Protobuf.Reflection.MessageDescriptor
~IdpServiceFacade.InitiatePasswordResetReply.InitiatePasswordResetReply(IdpServiceFacade.InitiatePasswordResetReply other) -> void
~IdpServiceFacade.InitiatePasswordResetReply.Clone() -> IdpServiceFacade.InitiatePasswordResetReply
~IdpServiceFacade.InitiatePasswordResetReply.Token.get -> string
~IdpServiceFacade.InitiatePasswordResetReply.Token.set -> void
~override IdpServiceFacade.InitiatePasswordResetReply.Equals(object other) -> bool
~IdpServiceFacade.InitiatePasswordResetReply.Equals(IdpServiceFacade.InitiatePasswordResetReply other) -> bool
override IdpServiceFacade.InitiatePasswordResetReply.GetHashCode() -> int
~override IdpServiceFacade.InitiatePasswordResetReply.ToString() -> string
~IdpServiceFacade.InitiatePasswordResetReply.WriteTo(Google.Protobuf.CodedOutputStream output) -> void
IdpServiceFacade.InitiatePasswordResetReply.CalculateSize() -> int
~IdpServiceFacade.InitiatePasswordResetReply.MergeFrom(IdpServiceFacade.InitiatePasswordResetReply other) -> void
~IdpServiceFacade.InitiatePasswordResetReply.MergeFrom(Google.Protobuf.CodedInputStream input) -> void
IdpServiceFacade.InitiatePasswordResetReply.InitiatePasswordResetReply() -> void

