Abstractions.Auth0Settings
Abstractions.Auth0Settings.ApiAudience.get -> string!
Abstractions.Auth0Settings.ApiAudience.set -> void
Abstractions.Auth0Settings.Audience.get -> string!
Abstractions.Auth0Settings.Audience.set -> void
Abstractions.Auth0Settings.Auth0Settings() -> void
Abstractions.Auth0Settings.ClientId.get -> string!
Abstractions.Auth0Settings.ClientId.set -> void
Abstractions.Auth0Settings.ClientSecret.get -> string!
Abstractions.Auth0Settings.ClientSecret.set -> void
Abstractions.Auth0Settings.ConnectionName.get -> string!
Abstractions.Auth0Settings.ConnectionName.set -> void
Abstractions.Auth0Settings.DatabaseName.get -> string!
Abstractions.Auth0Settings.DatabaseName.set -> void
Abstractions.Auth0Settings.Domain.get -> string!
Abstractions.Auth0Settings.Domain.set -> void
Abstractions.IAuth0Client
Abstractions.IAuth0Client.GetUser(string! oruUid, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<Auth0.ManagementApi.Models.User!>!
Abstractions.IAuth0Client.GetUsers(string![]! oruUid, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<System.Collections.Generic.List<Auth0.ManagementApi.Models.User!>!>!
Abstractions.IAuth0Client.HealthCheck(System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<bool>!
Abstractions.IOrganizationService
Abstractions.IOrganizationService.AddUserToOrganization(Auth0.ManagementApi.Models.User! user, string! orgId, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task!
Abstractions.IOrganizationService.CreateOrganization(Abstractions.OrganizationCreateInfo! organizationCreateInfo, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> MorseCode.ITask.ITask<Abstractions.OkError!>!
Abstractions.IOrganizationService.InviteUser(string! organizationId, string! userEmail, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> MorseCode.ITask.ITask<Abstractions.OkError!>!
Abstractions.IOrganizationService.ListOrganizations(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> MorseCode.ITask.ITask<System.Collections.Generic.IEnumerable<Abstractions.Org!>!>!
Abstractions.IRoleService
Abstractions.IRoleService.CreateRole(string! roleName, string? description = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> MorseCode.ITask.ITask<Abstractions.OkError!>!
Abstractions.IUserService
Abstractions.IUserService.BlockUser(string! email, System.Threading.CancellationToken cancellationToken) -> MorseCode.ITask.ITask<Abstractions.OkError!>!
Abstractions.IUserService.ChangePassword(string! email, string! newPassword, System.Threading.CancellationToken cancellationToken) -> MorseCode.ITask.ITask<Abstractions.OkError!>!
Abstractions.IUserService.CreateUser(Abstractions.UserCreateInfo! userCreateInfo, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<Auth0.ManagementApi.Models.User?>!
Abstractions.IUserService.CreateUserImplementation(Auth0.ManagementApi.Models.UserCreateRequest! userCreateRequest, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<Auth0.ManagementApi.Models.User!>!
Abstractions.IUserService.CreateUserWithResult(Auth0.ManagementApi.Models.UserCreateRequest! userCreateRequest, System.Threading.CancellationToken cancellationToken) -> MorseCode.ITask.ITask<Abstractions.OkError!>!
Abstractions.IUserService.DisableMfa(string! email, System.Threading.CancellationToken cancellationToken) -> MorseCode.ITask.ITask<Abstractions.OkError!>!
Abstractions.IUserService.EnableMfa(string! email, System.Threading.CancellationToken cancellationToken) -> MorseCode.ITask.ITask<Abstractions.OkError!>!
Abstractions.IUserService.GetRefreshTokenAsyncImplementation(string! refreshToken, System.Collections.Generic.IEnumerable<string!>? keys, System.Threading.CancellationToken cancellationToken) -> MorseCode.ITask.ITask<TokenResponsePayload<Abstractions.TokenResponse>!>!
Abstractions.IUserService.GetTokenAsyncImplementation(string! username, string! password, System.Collections.Generic.IEnumerable<string!>? keys, System.Threading.CancellationToken cancellationToken) -> MorseCode.ITask.ITask<TokenResponsePayload<Abstractions.TokenResponse>!>!
Abstractions.IUserService.GetUserMetadata(string! email, System.Collections.Generic.IEnumerable<string!>? keys, System.Threading.CancellationToken cancellationToken) -> MorseCode.ITask.ITask<System.Collections.Generic.IReadOnlyDictionary<string!, string?>?>!
Abstractions.IUserService.GetUsersMetadataByEmailAddresses(System.Collections.Generic.IEnumerable<string!>! emailAddresses, System.Collections.Generic.IEnumerable<string!>? keys, System.Threading.CancellationToken cancellationToken) -> MorseCode.ITask.ITask<System.Collections.Generic.IReadOnlyDictionary<string!, System.Collections.Generic.IReadOnlyDictionary<string!, string?>?>?>!
Abstractions.IUserService.GetUsersMetadataByEmailFragment(string! searchTerm, System.Collections.Generic.IEnumerable<string!>? keys, System.Threading.CancellationToken cancellationToken) -> MorseCode.ITask.ITask<System.Collections.Generic.IReadOnlyDictionary<string!, System.Collections.Generic.IReadOnlyDictionary<string!, string?>?>?>!
Abstractions.IUserService.GetUsersMetadataByNameFragment(string! searchTerm, System.Collections.Generic.IEnumerable<string!>? keys, System.Threading.CancellationToken cancellationToken) -> MorseCode.ITask.ITask<System.Collections.Generic.IReadOnlyDictionary<string!, System.Collections.Generic.IReadOnlyDictionary<string!, string?>?>?>!
Abstractions.IUserService.GetUsersMetadataByNameOrEmailFragment(string! searchTerm, string! orgUid, System.Collections.Generic.IEnumerable<string!>? keys, System.Threading.CancellationToken cancellationToken) -> MorseCode.ITask.ITask<System.Collections.Generic.IReadOnlyDictionary<string!, System.Collections.Generic.IReadOnlyDictionary<string!, string?>?>?>!
Abstractions.IUserService.GetUsersMetadataByNameOrEmailFragment(string! searchTerm, System.Collections.Generic.IEnumerable<string!>? keys, System.Threading.CancellationToken cancellationToken) -> MorseCode.ITask.ITask<System.Collections.Generic.IReadOnlyDictionary<string!, System.Collections.Generic.IReadOnlyDictionary<string!, string?>?>?>!
Abstractions.IUserService.ListUsers(string! luceneQuery = "user_id:*", System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<Auth0.ManagementApi.Models.User!>!>!
Abstractions.IUserService.MarkUserAsFraud(string! email, System.Threading.CancellationToken cancellationToken) -> MorseCode.ITask.ITask<Abstractions.OkError!>!
Abstractions.IUserService.MarkUserAsSuspicious(string! email, System.Threading.CancellationToken cancellationToken) -> MorseCode.ITask.ITask<Abstractions.OkError!>!
Abstractions.IUserService.ResetPassword(string! email, System.Threading.CancellationToken cancellationToken) -> MorseCode.ITask.ITask<string?>!
Abstractions.IUserService.UnblockUser(string! email, System.Threading.CancellationToken cancellationToken) -> MorseCode.ITask.ITask<Abstractions.OkError!>!
Abstractions.IUserService.UpdateUser(string! identityId, Auth0.ManagementApi.Models.UserUpdateRequest! request, System.Threading.CancellationToken cancellationToken) -> MorseCode.ITask.ITask<Abstractions.OkError!>!
Abstractions.OkError
Abstractions.OkError.<Clone>$() -> Abstractions.OkError!
Abstractions.OkError.Deconstruct(out bool OK, out string? Error) -> void
Abstractions.OkError.Equals(Abstractions.OkError? other) -> bool
Abstractions.OkError.Error.get -> string?
Abstractions.OkError.Error.init -> void
Abstractions.OkError.OK.get -> bool
Abstractions.OkError.OK.init -> void
Abstractions.OkError.OkError(bool OK = true, string? Error = null) -> void
Abstractions.Org
Abstractions.Org.Deconstruct(out string! Id, out string! Name, out string! DisplayName, out System.Collections.Generic.IReadOnlyDictionary<string!, string!>? Metadata) -> void
Abstractions.Org.DisplayName.get -> string!
Abstractions.Org.DisplayName.init -> void
Abstractions.Org.Id.get -> string!
Abstractions.Org.Id.init -> void
Abstractions.Org.Metadata.get -> System.Collections.Generic.IReadOnlyDictionary<string!, string!>?
Abstractions.Org.Metadata.init -> void
Abstractions.Org.Name.get -> string!
Abstractions.Org.Name.init -> void
Abstractions.Org.Org(Abstractions.Org! original) -> void
Abstractions.Org.Org(string! Id, string! Name, string! DisplayName, System.Collections.Generic.IReadOnlyDictionary<string!, string!>? Metadata = null) -> void
Abstractions.OrganizationCreateInfo
Abstractions.OrganizationCreateInfo.Deconstruct(out string! Name, out string? LegacyId, out string? LegacyUid) -> void
Abstractions.OrganizationCreateInfo.LegacyId.get -> string?
Abstractions.OrganizationCreateInfo.LegacyId.init -> void
Abstractions.OrganizationCreateInfo.LegacyUid.get -> string?
Abstractions.OrganizationCreateInfo.LegacyUid.init -> void
Abstractions.OrganizationCreateInfo.Name.get -> string!
Abstractions.OrganizationCreateInfo.Name.init -> void
Abstractions.OrganizationCreateInfo.OrganizationCreateInfo(Abstractions.OrganizationCreateInfo! original) -> void
Abstractions.OrganizationCreateInfo.OrganizationCreateInfo(string! Name, string? LegacyId = null, string? LegacyUid = null) -> void
Abstractions.TokenResponse
Abstractions.TokenResponse.AccessToken.get -> string?
Abstractions.TokenResponse.AccessToken.set -> void
Abstractions.TokenResponse.Deconstruct(out string? AccessToken, out int? ExpiresIn, out string? RefreshToken, out string? TokenType, out string? Scope) -> void
Abstractions.TokenResponse.Equals(Abstractions.TokenResponse other) -> bool
Abstractions.TokenResponse.ExpiresIn.get -> int?
Abstractions.TokenResponse.ExpiresIn.set -> void
Abstractions.TokenResponse.RefreshToken.get -> string?
Abstractions.TokenResponse.RefreshToken.set -> void
Abstractions.TokenResponse.Scope.get -> string?
Abstractions.TokenResponse.Scope.set -> void
Abstractions.TokenResponse.TokenResponse() -> void
Abstractions.TokenResponse.TokenResponse(string? AccessToken, int? ExpiresIn, string? RefreshToken, string? TokenType, string? Scope) -> void
Abstractions.TokenResponse.TokenType.get -> string?
Abstractions.TokenResponse.TokenType.set -> void
Abstractions.UserCreateInfo
Abstractions.UserCreateInfo.Deconstruct(out string! FirstName, out string! LastName, out string! Email, out string! Password) -> void
Abstractions.UserCreateInfo.Email.get -> string!
Abstractions.UserCreateInfo.Email.init -> void
Abstractions.UserCreateInfo.FirstName.get -> string!
Abstractions.UserCreateInfo.FirstName.init -> void
Abstractions.UserCreateInfo.LastName.get -> string!
Abstractions.UserCreateInfo.LastName.init -> void
Abstractions.UserCreateInfo.Password.get -> string!
Abstractions.UserCreateInfo.Password.init -> void
Abstractions.UserCreateInfo.UserCreateInfo(Abstractions.UserCreateInfo! original) -> void
Abstractions.UserCreateInfo.UserCreateInfo(string! FirstName, string! LastName, string! Email, string! Password) -> void
TokenResponsePayload<T>
TokenResponsePayload<T>.Error.get -> string?
TokenResponsePayload<T>.Error.init -> void
TokenResponsePayload<T>.Result.get -> T?
TokenResponsePayload<T>.Result.init -> void
TokenResponsePayload<T>.TokenResponsePayload() -> void
override Abstractions.OkError.Equals(object? obj) -> bool
override Abstractions.OkError.GetHashCode() -> int
override Abstractions.OkError.ToString() -> string!
override Abstractions.Org.Equals(object? obj) -> bool
override Abstractions.Org.GetHashCode() -> int
override Abstractions.Org.ToString() -> string!
override Abstractions.OrganizationCreateInfo.Equals(object? obj) -> bool
override Abstractions.OrganizationCreateInfo.GetHashCode() -> int
override Abstractions.OrganizationCreateInfo.ToString() -> string!
override Abstractions.TokenResponse.GetHashCode() -> int
override Abstractions.UserCreateInfo.Equals(object? obj) -> bool
override Abstractions.UserCreateInfo.GetHashCode() -> int
override Abstractions.UserCreateInfo.ToString() -> string!
static Abstractions.OkError.implicit operator Abstractions.OkError!(Innago.Shared.TryHelpers.Result result) -> Abstractions.OkError!
static Abstractions.OkError.operator !=(Abstractions.OkError? left, Abstractions.OkError? right) -> bool
static Abstractions.OkError.operator ==(Abstractions.OkError? left, Abstractions.OkError? right) -> bool
static Abstractions.Org.operator !=(Abstractions.Org? left, Abstractions.Org? right) -> bool
static Abstractions.Org.operator ==(Abstractions.Org? left, Abstractions.Org? right) -> bool
static Abstractions.OrganizationCreateInfo.operator !=(Abstractions.OrganizationCreateInfo? left, Abstractions.OrganizationCreateInfo? right) -> bool
static Abstractions.OrganizationCreateInfo.operator ==(Abstractions.OrganizationCreateInfo? left, Abstractions.OrganizationCreateInfo? right) -> bool
static Abstractions.TokenResponse.operator !=(Abstractions.TokenResponse left, Abstractions.TokenResponse right) -> bool
static Abstractions.TokenResponse.operator ==(Abstractions.TokenResponse left, Abstractions.TokenResponse right) -> bool
static Abstractions.UserCreateInfo.operator !=(Abstractions.UserCreateInfo? left, Abstractions.UserCreateInfo? right) -> bool
static Abstractions.UserCreateInfo.operator ==(Abstractions.UserCreateInfo? left, Abstractions.UserCreateInfo? right) -> bool
virtual Abstractions.Org.<Clone>$() -> Abstractions.Org!
virtual Abstractions.Org.EqualityContract.get -> System.Type!
virtual Abstractions.Org.Equals(Abstractions.Org? other) -> bool
virtual Abstractions.Org.PrintMembers(System.Text.StringBuilder! builder) -> bool
virtual Abstractions.OrganizationCreateInfo.<Clone>$() -> Abstractions.OrganizationCreateInfo!
virtual Abstractions.OrganizationCreateInfo.EqualityContract.get -> System.Type!
virtual Abstractions.OrganizationCreateInfo.Equals(Abstractions.OrganizationCreateInfo? other) -> bool
virtual Abstractions.OrganizationCreateInfo.PrintMembers(System.Text.StringBuilder! builder) -> bool
virtual Abstractions.UserCreateInfo.<Clone>$() -> Abstractions.UserCreateInfo!
virtual Abstractions.UserCreateInfo.EqualityContract.get -> System.Type!
virtual Abstractions.UserCreateInfo.Equals(Abstractions.UserCreateInfo? other) -> bool
virtual Abstractions.UserCreateInfo.PrintMembers(System.Text.StringBuilder! builder) -> bool
~override Abstractions.TokenResponse.Equals(object obj) -> bool
~override Abstractions.TokenResponse.ToString() -> string
